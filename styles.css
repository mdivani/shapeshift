@keyframes fadeOut {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

* {
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
  font-size: 1.6rem; }

.coin-box {
  background-color: #f7f7f7;
  display: block;
  cursor: pointer;
  color: #777;
  margin: auto;
  height: 200px;
  padding: 1.2rem;
  text-align: center;
  width: 150px; }
  .coin-box__image {
    display: inline-block;
    width: 80%; }
  .coin-box__label {
    text-transform: capitalize;
    font-size: 1.6rem;
    font-weight: 500;
    opacity: .9; }
  .coin-box:hover, .coin-box:active {
    opacity: .6; }

.trader-box {
  background-color: #f7f7f7;
  border-radius: 5px;
  box-shadow: 0 3px 6px rgba(45, 45, 45, 0.2);
  margin: auto;
  width: 60rem;
  padding: 2.4rem;
  position: relative; }
  .trader-box__title {
    color: #777;
    text-align: center;
    text-transform: capitalize;
    margin-top: 1.6rem; }
  .trader-box__content {
    display: none;
    animation: fadeOut .5s ease; }
    .trader-box__content--active {
      display: block; }
  .trader-box__form {
    margin-top: 16rem; }
  .trader-box__header {
    background-color: #374a68;
    border-radius: 5px 5px 0 0;
    position: absolute;
    padding-top: 0.8rem;
    top: 0;
    left: 0;
    right: 0; }
  .trader-box__rate {
    display: inline;
    padding-top: 0.8rem;
    margin: 0;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap; }

.row {
  max-width: 100%;
  margin: 0 auto; }
  .row::after {
    content: '';
    display: table;
    clear: both; }
  .row:not(:last-child) {
    margin-bottom: 2rem; }
  .row [class^='col-'] {
    float: left; }
    .row [class^='col-']:not(:last-child) {
      margin-right: 1.5rem; }
  .row .col-1-of-2 {
    width: calc((100% - 1.5rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 1.5rem*2)/3); }
  .row .col-2-of-3 {
    width: calc(2 * (100% - 1.5rem*2)/3 + 1.5rem); }
  .row .col-1-of-4 {
    width: calc((100% - 1.5rem*3)/4); }
  .row .col-2-of-4 {
    width: calc(2 * (100% - 1.5rem*3)/4 + 1.5rem); }
  .row .col-3-of-4 {
    width: calc( 3 * (100% - 1.5rem*3)/4 + 1.5rem * 2); }
  .row .col-1-of-5 {
    width: calc((100% - 1.5rem*4)/5); }
  .row .col-2-of-5 {
    width: calc(2 * (100% - 1.5rem*4)/5 + 1.5rem); }

.icon {
  text-align: center; }
  .icon__exchange {
    color: #777;
    cursor: pointer;
    font-size: 3rem;
    margin-top: 80px;
    opacity: .4;
    transition: all .3s;
    text-align: center; }
    .icon__exchange:hover, .icon__exchange:active {
      opacity: .6; }
  .icon__arr-back {
    display: inline-block;
    color: #f7f7f7;
    font-size: 2.4rem;
    margin-left: 0.8rem; }
    .icon__arr-back:hover {
      cursor: pointer;
      color: #dedede; }

.icon-secondary {
  display: inline; }

.margin-top--small {
  margin-top: 1.2rem; }

.btn {
  border: none;
  border-radius: 3px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
  cursor: pointer;
  padding: 1.6rem;
  transition: all .3s; }
  .btn--primary {
    background-color: #496693;
    width: 100%;
    color: #f7f7f7;
    font-size: 1.6rem;
    text-transform: capitalize; }
    .btn--primary:hover {
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
      transform: translateY(-2px); }
    .btn--primary:active {
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
      transform: translateY(1px);
      outline: none; }

.header-trader {
  background-color: #496693; }

.limits {
  background-color: #496693;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3), 0 -1px 4px rgba(45, 45, 45, 0.15);
  text-align: center;
  margin-top: 0.8rem;
  padding: 1.2rem 0; }
  .limits__column {
    padding: 3px; }
    .limits__column:not(:last-child) {
      border-right: 0.5px solid #c4c4c4; }
    .limits__column > p {
      margin: 0; }
      .limits__column > p:not(:last-child) {
        padding-bottom: 0.8rem; }

.text-primary {
  color: #9d9d9d;
  font-weight: 600;
  text-transform: capitalize; }

.text-secondary {
  color: #f7f7f7;
  text-transform: uppercase; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/